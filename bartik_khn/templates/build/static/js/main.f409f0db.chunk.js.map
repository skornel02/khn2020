{"version":3,"sources":["serviceWorker.ts","resource/Types.ts","resource/Drupal.ts","Login.tsx","DailyTimeline.tsx","Menu.tsx","Requests.tsx","Main.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","UserRole","RequestStatus","transformCreationResponse","response","id","parseInt","uid","link","_links","self","href","SERVER_ADDR","DrupalBackend","credentials","axios","axiosConfig","baseURL","withCredentials","undefined","auth","username","password","this","create","post","name","pass","then","result","data","current_user","roles","csrfToken","csrf_token","logoutToken","logout_token","get","map","userResult","role","Anon","includes","Parent","Grandma","Kid","uuid","locationResult","nid","title","body","value","headers","ruleResult","repeatRule","field_t_ismetlesi_szabaly","startDateTime","moment","unix","field_t_kezdesi_ido","length","field_idotartam","users","field_resztvevok","split","idString","format","HTML5_FMT","TIME_SECONDS","userUUIDs","join","_embedded","forEach","push","requestResult","description","JSON","parse","field_leiras","replace","status","field_allapot","type","creationDate","changed","stringify","field_letrehozasi_datum","AwaitingConfirmation","eventResult","comment","field_megjegyzes","field_ismetlesi_szabaly","dueTime","field_hatarido","startTimeDate","field_kezdesi_ido","field_sav","content","locationUUID","backend","user","login","doLogin","logout","Login","DisplayMode","props","useState","setUsername","setPassword","rememberMe","setRememberMe","badInputClass","setBadInputClass","badTextClass","setBadTextClass","lsUsername","localStorage","getItem","lsPassword","Backend","_","className","htmlFor","placeholder","onChange","event","target","checked","onClick","setItem","catch","resp","message","parser","require","timeRange","document","createEvent","e","isTouchDevice","DailyTimeline","locations","events","UserBased","filter","setFilter","chosen","renderedTimeline","LocationBased","index","flatMap","userId","find","cronEvents","forwardInterval","parseExpression","backwardsInterval","i","date","next","toDate","group","start_time","end_time","add","hour","minute","canMove","canResize","canChangeGroup","prev","clone","lLocations","lEvents","groups","items","defaultTimeStart","defaultTimeEnd","console","log","renderUserBased","uLocations","uEvents","Menu","menu","setMenu","BottomNavigation","newValue","toMain","toUsers","toRequests","BottomNavigationAction","label","icon","Home","Edit","Person","Requests","SelectedMenu","requests","request","Main","setState","selectedMenu","state","rules","loggedInRole","Drupal","getLocations","getScheduleEvent","getEventRequests","getRules","getUsers","currentMenu","style","display","flexDirection","minHeight","flex","maxHeight","height","userRole","Component","App","setRender","render","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f409f0db.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. Login is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport interface DrupalLoginResult {\r\n    current_user: {\r\n        uid: number,\r\n        roles: string[] | undefined,\r\n        name: string\r\n    }\r\n    csrf_token: string,\r\n    logout_token: string,\r\n}\r\n\r\nexport interface DrupalLogin {\r\n    id: number,\r\n    username: string,\r\n    roles: string[],\r\n    csrfToken: string,\r\n    logoutToken: string\r\n}\r\n\r\nexport enum UserRole {\r\n    Anon,\r\n    Parent,\r\n    Kid,\r\n    Grandma\r\n}\r\n\r\nexport interface DrupalUserResult {\r\n    uid: number,\r\n    uuid: string,\r\n    username: string,\r\n    roles: string[]\r\n}\r\n\r\nexport interface DrupalUser {\r\n    id: number,\r\n    uuid: string,\r\n    username: string,\r\n    role: UserRole\r\n}\r\n\r\nexport interface DrupalLocation {\r\n    nid: string,\r\n    uuid: string,\r\n    title: string,\r\n}\r\n\r\nexport interface EventLocation {\r\n    id: number,\r\n    uuid: string,\r\n    name: string\r\n}\r\n\r\nexport interface LocationCreationForm {\r\n    name: string,\r\n}\r\n\r\nexport interface DrupalRule {\r\n    title: string,\r\n    nid: string,\r\n    field_idotartam: string\r\n    field_t_ismetlesi_szabaly: string\r\n    field_t_kezdesi_ido: string\r\n    field_resztvevok: string\r\n}\r\n\r\nexport interface Rule {\r\n    name: string,\r\n    id: number,\r\n    repeatRule: string,\r\n    startDateTime: moment.Moment,\r\n    length: moment.Moment,\r\n    users: number[]\r\n}\r\n\r\nexport interface RuleCreationForm {\r\n    name: string,\r\n    repeatRule: string | undefined,\r\n    startDateTime: moment.Moment,\r\n    length: moment.Moment,\r\n    userUUIDs: string[]\r\n}\r\n\r\nexport enum RequestStatus {\r\n    Rejected,\r\n    AwaitingConfirmation,\r\n    Accepted\r\n}\r\n\r\nexport interface DrupalEventRequest {\r\n    nid: string,\r\n    title: string,\r\n    field_leiras: string,\r\n    changed: string,\r\n    field_allapot: RequestStatus,\r\n}\r\n\r\nexport interface EventRequest {\r\n    id: number\r\n    status: RequestStatus,\r\n    type: string,\r\n    description: string,\r\n    length: moment.Moment,\r\n    creationDate: moment.Moment\r\n}\r\n\r\nexport interface EventRequestCreationForm {\r\n    type: string,\r\n    description: string,\r\n    length: moment.Moment,\r\n}\r\n\r\nexport interface DrupalScheduleEvent {\r\n    nid: string\r\n    title: string,\r\n    field_megjegyzes: string,\r\n    field_ismetlesi_szabaly: string,\r\n\r\n    field_hatarido: string,\r\n    field_kezdesi_ido: string,\r\n    field_idotartam: string,\r\n\r\n    field_resztvevok: string,\r\n    field_sav: string,\r\n}\r\n\r\nexport interface ScheduleEvent {\r\n    id: number,\r\n    type: string,\r\n    repeatRule: string,\r\n    comment: string,\r\n\r\n    dueTime: moment.Moment,\r\n    startTimeDate: moment.Moment,\r\n    length: moment.Moment,\r\n\r\n    users: number[],\r\n    location: number,\r\n}\r\n\r\nexport interface ScheduleEventCreationForm {\r\n    name: string,\r\n    content: string,\r\n\r\n    repeatRule: string | undefined,\r\n    dueDate: string | undefined,\r\n    startDateTime: moment.Moment,\r\n    length: moment.Moment,\r\n\r\n    /**\r\n     * UUIDs\r\n     */\r\n    userUUIDs: string[],\r\n    /**\r\n     * UUID\r\n     */\r\n    locationUUID: string\r\n}\r\n\r\nexport interface DrupalCreationResponse {\r\n    \"_links\": {\r\n        \"self\": {\r\n            href: string\r\n        }\r\n    },\r\n    uid: string,\r\n}\r\n\r\nexport interface CreationResponse {\r\n    id: number,\r\n    link: string,\r\n}\r\n\r\nexport function transformCreationResponse(response: DrupalCreationResponse): CreationResponse {\r\n    return {\r\n        id: parseInt(response.uid),\r\n        link: response._links.self.href\r\n    }\r\n}","import axios, {AxiosInstance, AxiosRequestConfig} from \"axios\";\r\nimport {\r\n    CreationResponse, DrupalCreationResponse,\r\n    DrupalEventRequest,\r\n    DrupalLocation,\r\n    DrupalLogin,\r\n    DrupalLoginResult,\r\n    DrupalRule, DrupalScheduleEvent,\r\n    DrupalUser,\r\n    DrupalUserResult,\r\n    EventLocation, EventRequest, EventRequestCreationForm, LocationCreationForm,\r\n    RequestStatus,\r\n    Rule, RuleCreationForm, ScheduleEvent, ScheduleEventCreationForm, transformCreationResponse,\r\n    UserRole\r\n} from \"./Types\";\r\nimport moment from \"moment\";\r\n\r\nexport const SERVER_ADDR = \"https://versenydonto.nisz.hu:10016\";\r\n\r\nclass DrupalConnection {\r\n    backend: DrupalBackend = new DrupalBackend(undefined);\r\n    user: DrupalLogin | undefined = undefined;\r\n\r\n    login = (username: string, password: string): Promise<void> => {\r\n        return this.backend.doLogin(username, password)\r\n            .then(user => {\r\n                this.user = user;\r\n                this.backend = new DrupalBackend({username, password});\r\n            })\r\n    };\r\n\r\n    logout = () => {\r\n        this.backend = new DrupalBackend(undefined);\r\n    }\r\n\r\n}\r\n\r\nclass DrupalBackend {\r\n    private axios: AxiosInstance;\r\n\r\n    constructor(credentials: { username: string, password: string } | undefined) {\r\n        const axiosConfig: AxiosRequestConfig = {\r\n            baseURL: SERVER_ADDR,\r\n            withCredentials: false\r\n        };\r\n\r\n        if (credentials !== undefined) {\r\n            axiosConfig.auth = {\r\n                username: credentials.username,\r\n                password: credentials.password,\r\n            }\r\n        }\r\n        this.axios = axios.create(axiosConfig);\r\n    }\r\n\r\n    async doLogin(username: String, password: String): Promise<DrupalLogin> {\r\n        return this.axios.post<DrupalLoginResult>(\"/user/login?_format=hal_json\", {\r\n            name: username,\r\n            pass: password\r\n        })\r\n            .then(result => {\r\n                const formed: DrupalLogin = {\r\n                    id: result.data.current_user.uid,\r\n                    username: result.data.current_user.name,\r\n                    roles: result.data.current_user.roles ?? [],\r\n                    csrfToken: result.data.csrf_token,\r\n                    logoutToken: result.data.logout_token,\r\n                };\r\n                return formed;\r\n            });\r\n    };\r\n\r\n    async getCsrfToken(): Promise<String> {\r\n        return this.axios.get<string>(\"/session/token?_format=hal_json\")\r\n            .then(result => result.data);\r\n    }\r\n\r\n    async getUsers(): Promise<DrupalUser[]> {\r\n        return this.axios.get<DrupalUserResult[]>(\"/api/users_list?_format=hal_json\")\r\n            .then(result => {\r\n                return result.data.map(userResult => {\r\n                    let role: UserRole = UserRole.Anon;\r\n                    if (userResult.roles.includes(\"szulo\")) {\r\n                        role = UserRole.Parent;\r\n                    } else if (userResult.roles.includes(\"rokon\")) {\r\n                        role = UserRole.Grandma;\r\n                    } else if (userResult.roles.includes(\"gyerek\")) {\r\n                        role = UserRole.Kid;\r\n                    }\r\n                    const user: DrupalUser = {\r\n                        id: userResult.uid,\r\n                        uuid: userResult.uuid,\r\n                        username: userResult.username,\r\n                        role,\r\n                    };\r\n                    return user;\r\n                });\r\n            });\r\n    }\r\n\r\n    async getLocations(): Promise<EventLocation[]> {\r\n        return this.axios.get<DrupalLocation[]>(\"/api/location?_format=hal_json\")\r\n            .then(result => {\r\n                return result.data.map(locationResult => {\r\n                    const location: EventLocation = {\r\n                        id: parseInt(locationResult.nid),\r\n                        uuid: locationResult.uuid,\r\n                        name: locationResult.title\r\n                    };\r\n                    return location;\r\n                });\r\n            });\r\n    }\r\n\r\n    async createLocation(data: LocationCreationForm): Promise<CreationResponse> {\r\n        const body: any = {\r\n            \"_links\": {\r\n                \"type\": {\r\n                    \"href\": SERVER_ADDR + \"/rest/type/node/sav\"\r\n                }\r\n            },\r\n            title: [\r\n                {\r\n                    value: data.name\r\n                }\r\n            ],\r\n        };\r\n\r\n        return this.axios.post<DrupalCreationResponse>(\"/node?_format=hal_json\", body,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/hal+json\"\r\n                }\r\n            })\r\n            .then(result => transformCreationResponse(result.data));\r\n    }\r\n\r\n    async getRules(): Promise<Rule[]> {\r\n        return this.axios.get<DrupalRule[]>(\"/api/rule?_format=hal_json\")\r\n            .then(result => {\r\n                return result.data.map(ruleResult => {\r\n\r\n                    const rule: Rule = {\r\n                        name: ruleResult.title,\r\n                        id: parseInt(ruleResult.nid),\r\n                        repeatRule: ruleResult.field_t_ismetlesi_szabaly,\r\n                        startDateTime: moment.unix(parseInt(ruleResult.field_t_kezdesi_ido)),\r\n                        length: moment(ruleResult.field_idotartam, ['hh:mm:ss']),\r\n                        users: ruleResult.field_resztvevok.split(', ').map(idString => parseInt(idString))\r\n                    };\r\n                    return rule;\r\n                });\r\n            });\r\n    }\r\n\r\n    async createRule(data: RuleCreationForm): Promise<CreationResponse> {\r\n        const body: any = {\r\n            \"_links\": {\r\n                \"type\": {\r\n                    \"href\": SERVER_ADDR + \"/rest/type/node/tiltas\"\r\n                }\r\n            },\r\n            title: [\r\n                {\r\n                    value: data.name\r\n                }\r\n            ],\r\n            field_t_ismetlesi_szabaly: [\r\n                {\r\n                    value: data.repeatRule\r\n                }\r\n            ],\r\n            field_t_kezdesi_ido: [\r\n                {\r\n                    value: data.startDateTime.unix()\r\n                }\r\n            ],\r\n            field_idotartam: [\r\n                {\r\n                    value: data.length.format(moment.HTML5_FMT.TIME_SECONDS)\r\n                }\r\n            ],\r\n            field_resztvevok: [\r\n                {\r\n                    value: data.userUUIDs.join(\", \")\r\n                }\r\n            ],\r\n            \"_embedded\": {\r\n\r\n            }\r\n        };\r\n        body._embedded[SERVER_ADDR + \"/rest/relation/node/tiltas/field_resztvevok\"] = [];\r\n        data.userUUIDs.forEach(uuid => {\r\n            body._embedded[SERVER_ADDR + \"/rest/relation/node/tiltas/field_resztvevok\"].push({\r\n                uuid: [\r\n                    {\r\n                        value: uuid\r\n                    }\r\n                ]\r\n            })\r\n        });\r\n\r\n        return this.axios.post<DrupalCreationResponse>(\"/node?_format=hal_json\", body,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/hal+json\"\r\n                }\r\n            })\r\n            .then(result => transformCreationResponse(result.data));\r\n    }\r\n\r\n    async getEventRequests(): Promise<EventRequest[]> {\r\n        return this.axios.get<DrupalEventRequest[]>(\"/api/request?_format=hal_json\")\r\n            .then(result => {\r\n                return result.data.map(requestResult => {\r\n                    const description: any = JSON.parse(requestResult.field_leiras.replace(/(&quot\\;)/g,\"\\\"\"));\r\n                    const request: EventRequest = {\r\n                        id: parseInt(requestResult.nid),\r\n                        status: requestResult.field_allapot,\r\n                        type: requestResult.title,\r\n                        description: description.description,\r\n                        length: moment(description.length, ['hh:mm:ss']),\r\n                        creationDate: moment(requestResult.changed)\r\n                    };\r\n                    return request;\r\n                });\r\n            });\r\n    }\r\n\r\n    async createEventRequest(data: EventRequestCreationForm): Promise<CreationResponse> {\r\n        const body: any = {\r\n            \"_links\": {\r\n                \"type\": {\r\n                    \"href\": SERVER_ADDR + \"/rest/type/node/kerelem\"\r\n                }\r\n            },\r\n            title: [\r\n                {\r\n                    value: data.type\r\n                }\r\n            ],\r\n            field_leiras: [\r\n                {\r\n                    value: JSON.stringify({\r\n                        description: data.description,\r\n                        length: data.length.format(moment.HTML5_FMT.TIME_SECONDS),\r\n                    })\r\n                }\r\n            ],\r\n            field_letrehozasi_datum: [\r\n                {\r\n                    value: moment().unix()\r\n                }\r\n            ],\r\n            field_allapot: [\r\n                {\r\n                    value: RequestStatus.AwaitingConfirmation\r\n                }\r\n            ]\r\n        };\r\n\r\n        return this.axios.post<DrupalCreationResponse>(\"/node?_format=hal_json\", body,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/hal+json\"\r\n                }\r\n            })\r\n            .then(result => transformCreationResponse(result.data));\r\n    }\r\n\r\n    async getScheduleEvent(): Promise<ScheduleEvent[]> {\r\n        return this.axios.get<DrupalScheduleEvent[]>(\"/api/event?_format=hal_json\")\r\n            .then(result => {\r\n                return result.data.map(eventResult => {\r\n                    const rule: ScheduleEvent = {\r\n                        id: parseInt(eventResult.nid),\r\n                        type: eventResult.title,\r\n                        comment: eventResult.field_megjegyzes,\r\n                        repeatRule: eventResult.field_ismetlesi_szabaly,\r\n\r\n                        dueTime: moment(eventResult.field_hatarido),\r\n                        startTimeDate: moment.unix(parseInt(eventResult.field_kezdesi_ido)),\r\n                        length: moment(eventResult.field_idotartam, ['hh:mm:ss']),\r\n\r\n                        users: eventResult.field_resztvevok.split(', ').map(idString => parseInt(idString)),\r\n                        location: parseInt(eventResult.field_sav),\r\n                    };\r\n                    return rule;\r\n                });\r\n            });\r\n    }\r\n\r\n    async createScheduleEvent(data: ScheduleEventCreationForm): Promise<CreationResponse> {\r\n        const body: any = {\r\n            \"_links\": {\r\n                \"type\": {\r\n                    \"href\": SERVER_ADDR + \"/rest/type/node/napirend\"\r\n                }\r\n            },\r\n            title: [\r\n                {\r\n                    value: data.name\r\n                }\r\n            ],\r\n            field_megjegyzes: [\r\n                {\r\n                    value: data.content\r\n                }\r\n            ],\r\n            field_ismetlesi_szabaly: [\r\n                {\r\n                    value: data.repeatRule\r\n                }\r\n            ],\r\n            field_kezdesi_ido: [\r\n                {\r\n                    value: data.startDateTime.unix()\r\n                }\r\n            ],\r\n            field_idotartam: [\r\n                {\r\n                    value: data.length.format(moment.HTML5_FMT.TIME_SECONDS)\r\n                }\r\n            ],\r\n            \"_embedded\": {\r\n\r\n            }\r\n        };\r\n\r\n        body._embedded[SERVER_ADDR + \"/rest/relation/node/napirend/field_resztvevok\"] = [];\r\n        data.userUUIDs.forEach(uuid => {\r\n            body._embedded[SERVER_ADDR + \"/rest/relation/node/napirend/field_resztvevok\"].push({\r\n                uuid: [\r\n                    {\r\n                        value: uuid\r\n                    }\r\n                ]\r\n            })\r\n        });\r\n        body._embedded[SERVER_ADDR + \"/rest/relation/node/napirend/field_sav\"] = [\r\n            {\r\n                uuid: [\r\n                    {\r\n                        value: data.locationUUID\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        return this.axios.post<DrupalCreationResponse>(\"/node?_format=hal_json\", body,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/hal+json\"\r\n                }\r\n            })\r\n            .then(result => transformCreationResponse(result.data));\r\n    }\r\n\r\n}\r\n\r\nexport default new DrupalConnection();","import React, {useState} from 'react';\r\nimport Backend from './resource/Drupal';\r\nimport {AxiosError} from \"axios\";\r\n\r\nfunction Login(props: { login: () => void }) {\r\n    const [username, setUsername] = useState<string>(\"\");\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false);\r\n    const [badInputClass, setBadInputClass] = useState<string>(\"\");\r\n    const [badTextClass, setBadTextClass] = useState<string>(\"\");\r\n\r\n    const lsUsername=localStorage.getItem(\"username\");\r\n    const lsPassword=localStorage.getItem(\"password\");\r\n    if (lsUsername !== null && lsPassword !== null){\r\n        Backend.login(lsUsername, lsPassword)\r\n            .then(_ => {\r\n                props.login();\r\n            })\r\n    }\r\n\r\n    const login = () => {\r\n        Backend.login(username, password)\r\n            .then(_ => {\r\n                props.login();\r\n                if(rememberMe){\r\n                    localStorage.setItem(\"username\", username);\r\n                    localStorage.setItem(\"password\", password);\r\n                }\r\n            })\r\n            .catch((resp: AxiosError) => {\r\n                if (resp.response?.data.message === \"Sorry, unrecognized username or password.\") {\r\n                    setBadInputClass(\"border-red-500\");\r\n                    setBadTextClass(\"text-red-500\");\r\n                }\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex justify-center h-screen\">\r\n\r\n            <form className=\"bg-gray-200 shadow-md rounded px-8 pt-6 pb-8 m-auto text-sm sm:text-2xl\">\r\n                {badInputClass + badTextClass !== \"\" ?\r\n                    <p className=\"text-base text-red-500 mb-6 text-center font-bold\">Helytelen jelszó, vagy\r\n                        felhasználónév!</p> : null}\r\n\r\n                <div className=\"mb-4\">\r\n                    <label className={\"block text-gray-700 font-bold mb-2 \" + badTextClass} htmlFor=\"username\">\r\n                        Felhasználónév\r\n                    </label>\r\n                    <input\r\n                        className={\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline \" + badInputClass}\r\n                        id=\"username\" type=\"text\" placeholder=\"Felhasználónév\"\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                        value={username}/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className={\"block text-gray-700 font-bold mb-2 \" + badTextClass} htmlFor=\"password\">\r\n                        Jelszó\r\n                    </label>\r\n                    <input\r\n                        className={\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline \" + badInputClass}\r\n                        id=\"password\" type=\"password\" placeholder=\"******************\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        value={password}/>\r\n                </div>\r\n                <div className=\"flex justify-center mb-3\">\r\n                    <label className=\"lock text-gray-500 font-bold\">\r\n                        <input className=\"mr-2 leading-tight\" type=\"checkbox\" onChange={(event) => setRememberMe(event.target.checked)}/>\r\n                        <span className=\"text-base\">\r\n                            Jegyezz meg!\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"flex justify-center\">\r\n                    <button\r\n                        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                        type=\"button\" onClick={login}>\r\n                        Bejelentkezés\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState} from \"react\";\r\nimport Timeline, {TimelineGroupBase, TimelineItemBase} from \"react-calendar-timeline\";\r\nimport moment from \"moment\";\r\nimport {DrupalUser, EventLocation, ScheduleEvent} from \"./resource/Types\";\r\n\r\nconst parser = require('cron-parser');\r\n\r\nenum DisplayMode {\r\n    LocationBased,\r\n    UserBased,\r\n}\r\n\r\nfunction isTouchDevice(): boolean {\r\n    try {\r\n        document.createEvent(\"TouchEvent\");\r\n        return true;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst timeRange = isTouchDevice() ? 1 : 6;\r\n\r\nconst renderLocationBased = (locations: EventLocation[], events: ScheduleEvent[], users: DrupalUser[])\r\n    : [TimelineGroupBase[], TimelineItemBase<moment.Moment>[]] => {\r\n    const transformedLocations: TimelineGroupBase[] = locations.map((location, index) => {\r\n        return {\r\n            id: index + 1,\r\n            title: location.name\r\n        }\r\n    });\r\n    const transformedEvents: TimelineItemBase<moment.Moment>[] = events.flatMap((event, index) => {\r\n        const title = event.users\r\n            .map(userId => users.find(user => user.id === userId))\r\n            .map(user => user?.username ?? \"-\")\r\n            .join(\", \");\r\n\r\n        if (event.repeatRule !== undefined && event.repeatRule.length !== 0 && event.repeatRule !== \"0\") {\r\n            const cronEvents: TimelineItemBase<moment.Moment>[] = [];\r\n            const forwardInterval = parser.parseExpression(event.repeatRule);\r\n            const backwardsInterval = parser.parseExpression(event.repeatRule);\r\n            for (let i = 0; i < 7; i++) {\r\n                const date = forwardInterval.next().toDate();\r\n                cronEvents.push({\r\n                    id: event.id + \"::elore::\" + i,\r\n                    group: event.location,\r\n                    start_time: moment(date),\r\n                    end_time: moment(date)\r\n                        .add(event.length.hour(), 'hours')\r\n                        .add(event.length.minute(), 'minutes'),\r\n                    title: title,\r\n                    canMove: false,\r\n                    canResize: false,\r\n                    canChangeGroup: false,\r\n                });\r\n            }\r\n            for (let i = 0; i < 3; i++) {\r\n                const date = backwardsInterval.prev().toDate();\r\n                cronEvents.push({\r\n                    id: event.id + \"::elore::\" + i,\r\n                    group: event.location,\r\n                    start_time: moment(date),\r\n                    end_time: moment(date)\r\n                        .add(event.length.hour(), 'hours')\r\n                        .add(event.length.minute(), 'minutes'),\r\n                    title: title,\r\n                    canMove: false,\r\n                    canResize: false,\r\n                    canChangeGroup: false,\r\n                });\r\n            }\r\n            return cronEvents;\r\n        } else {\r\n            return [{\r\n                id: event.id,\r\n                group: event.location,\r\n                start_time: event.startTimeDate,\r\n                end_time: event.startTimeDate\r\n                    .clone()\r\n                    .add(event.length.hour(), 'hours')\r\n                    .add(event.length.minute(), 'minutes'),\r\n                title: title,\r\n                canMove: false,\r\n                canResize: false,\r\n                canChangeGroup: false,\r\n            }];\r\n        }\r\n    });\r\n    return [transformedLocations, transformedEvents];\r\n};\r\n\r\nconst renderUserBased = (locations: EventLocation[], events: ScheduleEvent[], users: DrupalUser[])\r\n    : [TimelineGroupBase[], TimelineItemBase<moment.Moment>[]] => {\r\n    const transformedLocations: TimelineGroupBase[] = users.map((user, index) => {\r\n        return {\r\n            id: user.username,\r\n            title: user.username\r\n        }\r\n    });\r\n\r\n    const transformedEvents: TimelineItemBase<moment.Moment>[] = events.flatMap((event, index) => {\r\n        const usernames = event.users\r\n            .map(userId => users.find(user => user.id === userId))\r\n            .map(user => user?.username ?? \"-\");\r\n\r\n        const items: TimelineItemBase<moment.Moment>[] = usernames.flatMap(username => {\r\n            console.log(username);\r\n            if (event.repeatRule !== undefined && event.repeatRule.length !== 0 && event.repeatRule !== \"0\") {\r\n                const cronEvents: TimelineItemBase<moment.Moment>[] = [];\r\n                const forwardInterval = parser.parseExpression(event.repeatRule);\r\n                const backwardsInterval = parser.parseExpression(event.repeatRule);\r\n                for (let i = 0; i < 7; i++) {\r\n                    const date = forwardInterval.next().toDate();\r\n                    cronEvents.push({\r\n                        id: username + \"::\" + event.id + \"::elore::\" + i,\r\n                        group: username,\r\n                        start_time: moment(date),\r\n                        end_time: moment(date)\r\n                            .add(event.length.hour(), 'hours')\r\n                            .add(event.length.minute(), 'minutes'),\r\n                        title: event.type,\r\n                        canMove: false,\r\n                        canResize: false,\r\n                        canChangeGroup: false,\r\n                    });\r\n                }\r\n                for (let i = 0; i < 3; i++) {\r\n                    const date = backwardsInterval.prev().toDate();\r\n                    cronEvents.push({\r\n                        id: username + \"::\" + event.id + \"::elore::\" + i,\r\n                        group: username,\r\n                        start_time: moment(date),\r\n                        end_time: moment(date)\r\n                            .add(event.length.hour(), 'hours')\r\n                            .add(event.length.minute(), 'minutes'),\r\n                        title: event.type,\r\n                        canMove: false,\r\n                        canResize: false,\r\n                        canChangeGroup: false,\r\n                    });\r\n                }\r\n                return cronEvents;\r\n            } else {\r\n                return [{\r\n                    id: username + \"::\" + event.id,\r\n                    group: username,\r\n                    start_time: event.startTimeDate,\r\n                    end_time: event.startTimeDate\r\n                        .clone()\r\n                        .add(event.length.hour(), 'hours')\r\n                        .add(event.length.minute(), 'minutes'),\r\n                    title: event.location,\r\n                    canMove: false,\r\n                    canResize: false,\r\n                    canChangeGroup: false,\r\n                }];\r\n            }\r\n        });\r\n        return items;\r\n    });\r\n    return [transformedLocations, transformedEvents];\r\n};\r\n\r\nconst DailyTimeline: React.FunctionComponent<{\r\n    locations: EventLocation[],\r\n    events: ScheduleEvent[],\r\n    users: DrupalUser[],\r\n}> = props => {\r\n    const [filter, setFilter] = useState<DisplayMode>(DisplayMode.UserBased);\r\n\r\n    let chosen = \"\";\r\n    let renderedTimeline = (<></>);\r\n\r\n    switch (filter) {\r\n        case DisplayMode.LocationBased:\r\n            chosen = \"Eszköz alapú\";\r\n            const [lLocations, lEvents] = renderLocationBased(props.locations, props.events, props.users);\r\n            renderedTimeline = (\r\n                <Timeline\r\n                    groups={lLocations}\r\n                    items={lEvents}\r\n                    defaultTimeStart={moment().add(0 - timeRange, 'hour')}\r\n                    defaultTimeEnd={moment().add(timeRange, 'hour')}\r\n                />\r\n            );\r\n            break;\r\n        case DisplayMode.UserBased:\r\n            chosen = \"Személy alapú\";\r\n\r\n            const [uLocations, uEvents] = renderUserBased(props.locations, props.events, props.users);\r\n            renderedTimeline = (\r\n                <Timeline\r\n                    groups={uLocations}\r\n                    items={uEvents}\r\n                    defaultTimeStart={moment().add(0 - timeRange, 'hour')}\r\n                    defaultTimeEnd={moment().add(timeRange, 'hour')}\r\n                />\r\n            );\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => {\r\n                switch (filter) {\r\n                    case DisplayMode.UserBased:\r\n                        setFilter(DisplayMode.LocationBased); break;\r\n                    case DisplayMode.LocationBased:\r\n                        setFilter(DisplayMode.UserBased); break;\r\n                }\r\n            }}>\r\n                {chosen}\r\n            </button>\r\n            {renderedTimeline}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DailyTimeline;","import React, {useState} from 'react';\r\nimport {UserRole} from \"./resource/Types\";\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport {Edit, Home, Person} from \"@material-ui/icons\";\r\n\r\ninterface Props {\r\n    toMain: () => void,\r\n    toRequests: () => void,\r\n    toUsers?: () => void,\r\n    userRole: UserRole\r\n}\r\n\r\nfunction Menu(props: Props) {\r\n    const [menu, setMenu] = useState<string>(\"home\");\r\n\r\n    const handleChange = (event: any, newValue: any) => {\r\n        setMenu(newValue);\r\n        switch (newValue) {\r\n            case \"home\":\r\n                props.toMain();\r\n                break;\r\n            case \"people\":\r\n                if (props.toUsers) {\r\n                    props.toUsers();\r\n                }\r\n                break;\r\n            case \"edit\":\r\n                props.toRequests();\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BottomNavigation value={menu} onChange={handleChange}>\r\n                <BottomNavigationAction label=\"Főoldal\" value=\"home\" icon={<Home />} />\r\n                <BottomNavigationAction label=\"Kérelmek\" value=\"edit\" icon={<Edit />} />\r\n                <BottomNavigationAction label=\"Emberek\" value=\"people\" icon={<Person />} />\r\n            </BottomNavigation>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport {EventRequest} from \"./resource/Types\";\r\n\r\nfunction Requests(props: { requests: EventRequest[] | undefined }) {\r\n    const renderRequest = () => {\r\n        if (!props.requests){\r\n            return null;\r\n        }\r\n\r\n        return props.requests.map(request => {\r\n            return <div>\r\n                <p>Kérés: {request.type}</p>\r\n                <p>Leírás: {request.description}</p>\r\n            </div>;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderRequest()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Requests;","import React, {Component} from 'react';\r\nimport 'react-calendar-timeline/lib/Timeline.css';\r\nimport Drupal from \"./resource/Drupal\";\r\nimport 'react-tiny-fab/dist/styles.css';\r\nimport {DrupalUser, EventLocation, EventRequest, Rule, ScheduleEvent, UserRole} from \"./resource/Types\";\r\nimport DailyTimeline from \"./DailyTimeline\";\r\nimport Menu from \"./Menu\";\r\nimport Requests from \"./Requests\";\r\n\r\nenum SelectedMenu {\r\n    DailyTimeline,\r\n    Requests,\r\n}\r\n\r\ninterface State {\r\n    locations: EventLocation[] | undefined,\r\n    events: ScheduleEvent[] | undefined,\r\n    requests: EventRequest[] | undefined,\r\n    rules: Rule[] | undefined,\r\n    users: DrupalUser[] | undefined,\r\n    loggedInRole: UserRole | undefined,\r\n    selectedMenu: SelectedMenu\r\n}\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nclass Main extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            locations: undefined,\r\n            events: undefined,\r\n            requests: undefined,\r\n            rules: undefined,\r\n            users: undefined,\r\n            loggedInRole: undefined,\r\n            selectedMenu: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        Drupal.backend.getLocations()\r\n            .then(locations => {\r\n                this.setState({locations});\r\n            });\r\n\r\n        Drupal.backend.getScheduleEvent()\r\n            .then(events => {\r\n                this.setState({events});\r\n            });\r\n\r\n        Drupal.backend.getEventRequests()\r\n            .then(requests => {\r\n                this.setState({requests});\r\n            });\r\n\r\n        Drupal.backend.getRules()\r\n            .then(rules => {\r\n                this.setState({rules});\r\n            });\r\n\r\n        Drupal.backend.getUsers()\r\n            .then(users => {\r\n                users = users.filter(user => user.id !== 0);\r\n                this.setState({users});\r\n\r\n                this.setState({loggedInRole: users.find(user => user.username === Drupal.user?.username)?.role ?? UserRole.Anon});\r\n            });\r\n    }\r\n\r\n    toRequests = () => {\r\n\r\n        this.setState({selectedMenu: SelectedMenu.Requests});\r\n    };\r\n\r\n    toMain = () => {\r\n        this.setState({selectedMenu: SelectedMenu.DailyTimeline});\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.locations\r\n            || !this.state.events\r\n            || !this.state.users\r\n            || !this.state.loggedInRole\r\n            || !this.state.requests\r\n            || !this.state.rules) {\r\n            return \"Loading\";\r\n        }\r\n\r\n        let currentMenu = null;\r\n        switch (this.state.selectedMenu) {\r\n            case SelectedMenu.DailyTimeline:\r\n                currentMenu = <DailyTimeline locations={this.state.locations} events={this.state.events}\r\n                                             users={this.state.users}/>\r\n                break;\r\n            case SelectedMenu.Requests:\r\n                currentMenu = <Requests requests={this.state.requests}/>\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div style={{display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\"}}>\r\n                <div style={{flex: \"1\", maxHeight: \"91vh\"}}>\r\n                    {currentMenu}\r\n                </div>\r\n                <div style={{height: \"9vh\"}}>\r\n                    <Menu toMain={this.toMain} toRequests={this.toRequests} userRole={this.state.loggedInRole}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, {useState} from 'react';\r\nimport Login from \"./Login\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App() {\r\n    const switchToMain = () => {\r\n        setRender(<Main/>)\r\n    };\r\n\r\n    const [render, setRender] = useState(<Login login={switchToMain}/>);\r\n\r\n    return (\r\n        <>\r\n            {render}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Drupal from \"./resource/Drupal\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// Drupal.login(\"testelek\", \"testelek\")\r\n//     .then(() => {\r\n//         Drupal.backend.getUsers().then(result => {\r\n//             console.log(\"users\", result);\r\n//         });\r\n//         Drupal.backend.getLocations().then(result => {\r\n//             console.log(\"locations\", result);\r\n//         });\r\n//         Drupal.backend.getRule().then(result => {\r\n//             console.log(\"rule\", result);\r\n//         });\r\n//         Drupal.backend.getEventRequests().then(result => {\r\n//             console.log(\"requests\", result);\r\n//         });\r\n//         Drupal.backend.getScheduleEvent().then(result => {\r\n//             console.log(\"events\", result);\r\n//         });\r\n//\r\n//         Drupal.logout();\r\n//     });\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}